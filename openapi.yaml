openapi: 3.0.3
info:
  title: ToDo List API
  version: 1.0.0
servers:
  - url: https://localhost:8000/api
tags:
  - name: auth
    description: Everything about authentication
  - name: tasks
    description: Everything about tasks
  - name: users
    description: Everything about users
paths:
  /auth:
    get:
      tags: [auth]
      summary: Get user authorization.
      operationId: authGet
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Something went wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      tags: [ auth ]
      summary: Edit account.
      operationId: usersPatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthPatch'
      responses:
        '200':
          description: Ok
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Username conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Something went wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags: [auth]
      summary: Logout.
      operationId: authDelete
      responses:
        '200':
          description: Ok
        '500':
          description: Something went wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /auth/signup:
    post:
      tags: [auth]
      summary: Create account.
      operationId: authSignupPost
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthSignupPost'
        required: true
      responses:
        '201':
          description: User created
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Something went wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /auth/login:
    post:
      tags: [auth]
      summary: Login.
      operationId: authLoginPost
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthLoginPost'
        required: true
      responses:
        '200':
          description: Success log into account
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Something went wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /tasks:
    get:
      tags: [tasks]
      summary: Get all user's tasks.
      operationId: tasksGet
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Something went wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags: [tasks]
      summary: Create a task.
      operationId: tasksPost
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskPost'
      responses:
        '201':
          description: Task created
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Something went wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /tasks/{id}:
    patch:
      tags: [tasks]
      summary: Edit task.
      operationId: tasksIdPatch
      parameters:
        - $ref: '#/components/parameters/taskId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskPatch'
      responses:
        '200':
          description: Ok
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Something went wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags: [tasks]
      summary: Delete task.
      operationId: tasksIdDelete
      parameters:
        - $ref: '#/components/parameters/taskId'
      responses:
        '200':
          description: Ok
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Something went wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /tasks/{id}/completed:
    put:
      tags: [tasks]
      summary: Complete task.
      operationId: tasksIdPatch
      parameters:
        - $ref: '#/components/parameters/taskId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskCompleted'
      responses:
        '200':
          description: Ok
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Something went wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /tasks/completed:
    delete:
      tags: [tasks]
      summary: Delete all completed tasks.
      operationId: tasksCompletedDelete
      responses:
        '200':
          description: Ok
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Something went wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /users/exists:
    post:
      tags: [users]
      summary: Check if user credentials exists.
      operationId: usersExistsPost
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsersExistsPost'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersExistsPostResponse'
        '500':
          description: Something went wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  parameters:
    taskId:
      name: id
      in: path
      required: true
      schema:
        type: string
        format: uuid
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
          format: uuid
        username:
          type: string
          example: 'dylandoe'
        email:
          type: string
          example: 'dylandoe@email.com'
      required: [ id, username, email ]

    AuthSignupPost:
      type: object
      properties:
        username:
          type: string
          example: 'dylandoe'
        email:
          type: string
          example: 'dylandoe@email.com'
        password:
          type: string
          example: 'Qwerty123'
      required: [ username, email, password ]

    AuthLoginPost:
      type: object
      properties:
        username:
          type: string
          example: 'dylandoe'
        password:
          type: string
          example: 'Qwerty123'
      required: [ username, password ]

    AuthPatch:
      type: object
      properties:
        username:
          type: string
          example: 'dylandoe'
        password:
          type: string
          example: 'Qwerty123'
        new_password:
          type: string
          example: 'Qwerty123'
      required: [ password ]

    Task:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          example: 'Go to the shop'
        description:
          type: string
          nullable: true
          example: 'Buy carrot, bread and pineapple'
        deadline:
          type: string
          nullable: true
          format: date-time
        completed:
          type: boolean
      required: [ id, name, description, deadline, completed ]

    TaskPost:
      type: object
      properties:
        name:
          type: string
          example: 'Go to the shop'
        description:
          type: string
          example: 'Buy carrot, bread and pineapple'
        deadline:
          type: string
          format: date-time
      required: [ name ]

    TaskPatch:
      type: object
      properties:
        name:
          type: string
          example: 'Go to the shop'
        description:
          type: string
          nullable: true
          example: 'Buy carrot, bread and pineapple'
        deadline:
          type: string
          nullable: true
          format: date-time

    TaskCompleted:
      type: object
      properties:
        completed:
          type: boolean
      required: [ completed ]

    UsersExistsPost:
      type: object
      properties:
        username:
          type: string
          example: 'dylandoe'
      required: [ username ]

    UsersExistsPostResponse:
      type: object
      properties:
        username:
          type: string
          example: 'dylandoe'
        exists:
          type: boolean
      required: [username, exists]

    Error:
      type: object
      properties:
        message:
          type: string
      required: [ message ]